function varargout=cellconnectivity_tags(VERTEX_params,ID_Matrix,group_boundaries,output_type,varargin)
% cellconnectivity_tags() produces different results depending on the value of
% output_type:
% 1) if output_type=='txt' cellconnectivity_tags() produces a txt file with 
% neuroml-like tags using ID_Matrix and group_boundaries generated by
% cellconnectivity.m. 
% 2) if output_type=='arrays', cellconnectivity_tags() returns
% Group_members and Index_array which, for example, are used in
% cellpositions_cellconnectivity.m. 
% 3) if output_Type=='all', cellconnectivity_tags() generates a txt file
% and returns Group_members and Index_array
if isstruct(VERTEX_params)==1
    c=VERTEX_params.TissueParams;
end

if iscell(VERTEX_params)==1
    c=VERTEX_params{1};
end


b=c.numGroups;
Index_array=cell(b,b); % preallocate index_array for index vectors; row index marks presynaptic population,
% whereas column index marks postsynaptic population.
Group_members=cell(1,b);
for i=1:b
    
    Index_vector=(c.groupBoundaryIDArr(i)+1):c.groupBoundaryIDArr(i+1);
    Group_members{1,i}=Index_vector;
end
for i=1:b
    if isempty(Index_vector)~=1
        for j=1:b
            if i==1
                start=1;
                Index_array{i,j}=find(ID_Matrix(4,start:group_boundaries(Group_members{1,i}(end)))==j);
            else
                start=(group_boundaries(Group_members{1,i-1}(end))+1);
                Index_array{i,j}=find(ID_Matrix(4,start:group_boundaries(Group_members{1,i}(end)))==j);
                Index_array{i,j}=Index_array{i,j}+group_boundaries(Group_members{1,i-1}(end));
            end
            
            
        end
        
    end
    
    
end
if strcmp(output_type,'arrays')==1
    varargout{1}=Group_members;
    varargout{2}=Index_array;
end
    
if strcmp(output_type,'txt')==1 || strcmp(output_type,'all')==1
    if strcmp(output_type,'all')==1
        varargout{1}=Group_members;
        varargout{2}=Index_array;
    end

    projection_counter=0;
    path=fileparts(which('VERTEX_txt.txt'));
    t=sprintf('%s%s%s.txt',path,filesep,varargin{1});
    fileID=fopen(t,'w');
    for i=1:b
        if isempty(Group_members{1,i})~=1
            for j=1:b
                if isempty(Index_array{i,j})~=1
                    projection_tag=sprintf('<projection id="projection_%d" presynapticPopulation="pop%d" postsynapticPopulation="pop%d">',projection_counter,i,j);
                    fprintf(fileID,'%s\r\n',projection_tag);
                    No_of_connections=length(Index_array{i,j});
                    projection_data=ID_Matrix(:,[Index_array{i,j}]);
                    for k=1:No_of_connections
                        connection_tag=sprintf('  <connection id="%d" preCellId="%d" postCellId="%d" postSegmentId="%d"/>',k-1,projection_data(1,k),projection_data(3,k),projection_data(5,k));
                        fprintf(fileID,'%s\r\n',connection_tag);
                    end
                    fprintf(fileID,'%s\r\n\r\n','</projection>');
                    projection_counter=projection_counter+1;
                end
            end
            
        end
        
        
    end
end





